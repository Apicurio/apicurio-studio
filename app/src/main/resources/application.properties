quarkus.native.resources.includes=io/apicurio/mas/studio/storage/impl/sql/h2.ddl

%dev.quarkus.live-reload.instrumentation=true

# Additional index dependencies
quarkus.index-dependency.jaxrs.group-id=org.jboss.spec.javax.ws.rs
quarkus.index-dependency.jaxrs.artifact-id=jboss-jaxrs-api_2.1_spec

# Name and description
app.id=apicurio-studio
app.name=Apicurio API Studio (In Memory)
app.description=Open Source API and Schema Editing Studio
app.version=${project.version}
app.date=${timestamp}

# Basic logging
quarkus.log.console.format=%d{YYYY-MM-dd HH:mm:ss} %p <%X{tenantId}> [%C] (%t) %m%n
quarkus.log.console.color=false

# Port and log levels
quarkus.http.port=${HTTP_PORT:8080}
quarkus.log.level=${LOG_LEVEL:INFO}
quarkus.log.category."io.apicurio".level=${STUDIO_LOG_LEVEL:INFO}
%dev.quarkus.log.category."io.apicurio".level=${STUDIO_LOG_LEVEL:DEBUG}
quarkus.log.console.enable=true
quarkus.package.type=legacy-jar

# Access logs
quarkus.http.access-log.enabled=${ENABLE_ACCESS_LOG:false}
quarkus.http.access-log.pattern="apicurio-studio.access method="%{METHOD}" path="%{REQUEST_URL}" response_code="%{RESPONSE_CODE}" response_time="%{RESPONSE_TIME}" remote_ip="%{REMOTE_IP}" remote_user="%{REMOTE_USER}" user_agent="%{i,User-Agent}""
#this property will be used by Quarkus 2.X
quarkus.http.access-log.exclude-pattern=/health/.*

# Dynamic configuration refresh
app.config.refresh.every=60s
@dev.app.config.refresh.every=10s

# Redirects
studio.enable-redirects=${STUDIO_ENABLE_REDIRECTS:true}
studio.redirects.root=/,${STUDIO_ROOT_REDIRECT:/ui/}

quarkus.http.proxy.proxy-address-forwarding=${STUDIO_PROXY_ADDRESS_FORWARDING:false}

quarkus.http.non-application-root-path=/

# UI Config
studio.ui.config.uiContextPath=${STUDIO_UI_CONFIG_UI_CONTEXT_PATH:/ui/}
studio.ui.config.apiUrl=${STUDIO_UI_CONFIG_APIURL:_}

# Include or exclude the stack trace in REST API error responses.
studio.api.errors.include-stack-in-response=${STUDIO_API_ERRORS_INCLUDE_STACKTRACE:false}

# Enable CORS always
quarkus.http.cors=true
quarkus.http.cors.origins=${CORS_ALLOWED_ORIGINS:}
quarkus.http.cors.methods=${CORS_ALLOWED_METHODS:GET,PUT,POST,PATCH,DELETE,OPTIONS}
quarkus.http.cors.headers=${CORS_ALLOWED_HEADERS:x-tenant-id,access-control-request-method,access-control-allow-credentials,access-control-allow-origin,access-control-allow-headers,authorization,content-type}

# Disable OpenAPI class scanning
mp.openapi.scan.disable=true
mp.openapi.servers=/apis/studio/v1

app.enable.multitenancy=false

quarkus.kafka.devservices.enabled=false

studio.multitenancy.reaper.every=${STUDIO_MT_REAPER_EVERY:3s}

# Auth
app.keycloak.url=${STUDIO_KEYCLOAK_URL:http://localhost:8090/auth}
app.keycloak.realm=${STUDIO_KEYCLOAK_REALM:apicurio-local}
quarkus.oidc.auth-server-url=${app.keycloak.url}/realms/${app.keycloak.realm}
quarkus.oidc.client-id=${STUDIO_KEYCLOAK_CLIENT_ID:studio-api}

app.authn.enabled=${STUDIO_AUTHN_ENABLED:false}
app.authn.token.endpoint=${STUDIO_AUTHN_TOKEN_ENDPOINT:${app.keycloak.url}/realms/${app.keycloak.realm}/protocol/openid-connect/token}
app.authn.client-secret=${STUDIO_KEYCLOAK_CLIENT_SECRET:}
app.authn.basic-auth-client-credentials.enabled=${STUDIO_AUTHN_BASIC_AUTH_ENABLED:false}

quarkus.oidc.enabled=true
quarkus.oidc.tenant-enabled=${app.authn.enabled}

studio.ui.config.authn.keycloak.url=${app.keycloak.url}
studio.ui.config.authn.keycloak.realm=${app.keycloak.realm}
studio.ui.config.authn.keycloak.clientId=${STUDIO_KEYCLOAK_UI_CLIENT_ID:apicurio-studio}
studio.ui.config.authn.keycloak.onLoad=login-required


# Storage
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=${STUDIO_DATASOURCE_URL:jdbc:h2:mem:STUDIO_db}
quarkus.datasource.username=${STUDIO_DATASOURCE_USERNAME:sa}
quarkus.datasource.password=${STUDIO_DATASOURCE_PASSWORD:sa}
quarkus.datasource.jdbc.initial-size=20
quarkus.datasource.jdbc.min-size=20
quarkus.datasource.jdbc.max-size=100
app.sql.init=true

# Metrics
quarkus.micrometer.enabled=true
quarkus.micrometer.binder.http-server.enabled=false
quarkus.micrometer.binder.http-client.enabled=false
quarkus.micrometer.export.prometheus.enabled=true
quarkus.datasource.metrics.enabled=true
quarkus.datasource.jdbc.enable-metrics=true

# Multi-tenancy
app.multitenancy.enabled=${STUDIO_MT_ENABLED:false}
app.multitenancy.authorization.enabled=${STUDIO_MT_AUTHORIZATION_ENABLED:false}
app.multitenancy.types.context-path.enabled=${STUDIO_MT_TYPES_CTXPATH_ENABLED:false}
app.multitenancy.types.subdomain.enabled=${STUDIO_MT_TYPES_SUBDOMAIN_ENABLED:false}
app.multitenancy.types.request-header.enabled=${STUDIO_MT_TYPES_REQHEADER_ENABLED:false}
app.multitenancy.types.context-path.base-path=${STUDIO_MT_TYPES_CTXPATH_BASEPATH:t}
app.multitenancy.types.subdomain.location=${STUDIO_MT_TYPES_SUBDOMAIN_LOCATION:header}
app.multitenancy.types.subdomain.header-name=${STUDIO_MT_TYPES_SUBDOMAIN_HEADERNAME:Host}
app.multitenancy.types.subdomain.pattern=${STUDIO_MT_TYPES_SUBDOMAIN_PATTERN:(\\w[\\w\\d\\-]*)\\.localhost\\.local(:8080)?}
app.multitenancy.types.request-header.name=${STUDIO_MT_TYPES_REQHEADER_NAME:X-Tenant-Id}
app.multitenancy.reaper.every=${STUDIO_MT_REAPER_EVERY:60s}
app.multitenancy.reaper.period-seconds=${STUDIO_MT_REAPER_PERIOD:10800}
app.tenant.manager.url=${STUDIO_TENANT_MANAGER_URL:http://localhost:8585}
app.tenant.manager.auth.enabled=${STUDIO_TENANT_MANAGER_AUTH_ENABLED:false}
app.tenant.manager.auth.realm=${STUDIO_TENANT_MANAGER_REALM:apicurio}
app.tenant.manager.auth.url=${STUDIO_TENANT_MANAGER_AUTH_URL:http://localhost:8090/auth}
app.tenant.manager.auth.url.configured=${STUDIO_TENANT_MANAGER_TOKEN_ENDPOINT:${app.tenant.manager.auth.url}/realms/${app.tenant.manager.auth.realm}/protocol/openid-connect/token}

apiVersion: v1
kind: Template
metadata:
  name: apicurio-postgres
message: |-
  Congratulations on deploying Apicurio Studio into OpenShift!
  
  The following secret(s) have been created in your project:
  
         SQL Username: ${GENERATED_DB_USER}
         SQL Password: ${GENERATED_DB_PASS}
         SQL Connection URL: postgresql://postgresql:5432/

objects:
# Persistent volumes: Postgresql
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: postgresql-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
# Secrets for: Postgresql
- kind: Secret
  apiVersion: v1
  metadata:
    name: postgresql
    labels:
      app: postgresql
      template: apicurio-studio
  stringData:
    database-user: "${GENERATED_DB_USER}"
    database-password: "${GENERATED_DB_PASS}"
# Services for: Keycloak, API, WS, UI
- apiVersion: v1
  kind: Service
  metadata:
    name: postgresql
    creationTimestamp: null
    labels:
      app: postgresql
      template: apicurio-studio
  spec:
    ports:
      - name: postgresql
        protocol: TCP
        port: 5432
        targetPort: 5432
    selector:
      name: postgresql
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
# Postgresql Deployment Configuration
# ###################################
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: postgresql
    creationTimestamp: null
    labels:
      app: postgresql
      template: apicurio-studio
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    # triggers:
    #   - type: ImageChange
    #     imageChangeParams:
    #       automatic: true
    #       containerNames:
    #         - postgresql
    #       from:
    #         kind: ImageStreamTag
    #         namespace: openshift
    #         name: 'postgresql:9.5'
    #   - type: ConfigChange
    replicas: 1
    test: false
    selector:
      name: postgresql
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql
      spec:
        volumes:
          - name: postgresql-data
            persistentVolumeClaim:
              claimName: postgresql-data
        containers:
          - name: postgresql
            image: centos/postgresql-95-centos7
            ports:
              - containerPort: 5432
                protocol: TCP
            env:
              - name: POSTGRESQL_USER
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: database-user
              - name: POSTGRESQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: database-password
              - name: POSTGRESQL_DATABASE
                value: ${DB_NAME}
            resources:
              limits:
                memory: 512Mi
            volumeMounts:
              - name: postgresql-data
                mountPath: /var/lib/pgsql/data
            livenessProbe:
              tcpSocket:
                port: 5432
              initialDelaySeconds: 30
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - '-i'
                  - '-c'
                  - >-
                    psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d
                    $POSTGRESQL_DATABASE -c 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: Always
            securityContext:
              capabilities: {}
              privileged: false
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
  status: {}
# Template Parameters
parameters:
- name: GENERATED_DB_USER
  displayName: PostgreSQL Connection Username
  description: Username for PostgreSQL user that will be used for accessing the database.
  generate: expression
  from: user[A-Z0-9]{3}
  required: true
- name: GENERATED_DB_PASS
  displayName: PostgreSQL Connection Password
  description: Password for the PostgreSQL connection user.
  generate: expression
  from: "[a-zA-Z0-9]{16}"
  required: true
- name: DB_NAME
  displayName: Database Name
  description: The name of the Postgresql database.
  value: apicuriodb
  required: true

apiVersion: v1
kind: Template
metadata:
  name: apicurio-studio-standalone
message: |-
  Congratulations on deploying Apicurio Studio into OpenShift!
  
  The following secret(s) have been created in your project:
  
         SQL Username: ${GENERATED_DB_USER}
         SQL Password: ${GENERATED_DB_PASS}
         SQL Connection URL: postgresql://postgresql:5432/
         Keycloak Username: ${GENERATED_KC_USER}
         Keycloak Password: ${GENERATED_KC_PASS}

  All Apicurio components have been deployed and configured.  Please note
  that the authentication component (Keycloak) requires additional configuration
  for it to support all Apicurio functionality (specifically account linking).
  In addition, you may want to configure Keycloak to your particular taste (for
  example you may want to enable social logins).  To configure Keycloak you
  can go here (and log in with the Keycloak username/password listed above):
  
         Keycloak URL: https://${AUTH_ROUTE}/auth

objects:
# Image Streams for the Apicurio components
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: auth
  spec:
    tags:
      - name: latest-release
        from:
          kind: DockerImage
          name: apicurio/apicurio-studio-auth:latest-release
        importPolicy:
          scheduled: true
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: api
  spec:
    tags:
      - name: latest-release
        from:
          kind: DockerImage
          name: apicurio/apicurio-studio-api:latest-release
        importPolicy:
          scheduled: true
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ws
  spec:
    tags:
      - name: latest-release
        from:
          kind: DockerImage
          name: apicurio/apicurio-studio-ws:latest-release
        importPolicy:
          scheduled: true
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ui
  spec:
    tags:
      - name: latest-release
        from:
          kind: DockerImage
          name: apicurio/apicurio-studio-ui:latest-release
        importPolicy:
          scheduled: true
# Persistent volumes: Keycloak and Postgresql
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: keycloak-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: postgresql-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
# Secrets for: Keycloak and Postgresql
- kind: Secret
  apiVersion: v1
  metadata:
    name: postgresql
    labels:
      app: postgresql
      template: apicurio-studio
  stringData:
    database-user: "${GENERATED_DB_USER}"
    database-password: "${GENERATED_DB_PASS}"
- kind: Secret
  apiVersion: v1
  metadata:
    name: apicurio-studio-auth
    labels:
      app: apicurio-studio-auth
      template: apicurio-studio
  stringData:
    keycloak-user: "${GENERATED_KC_USER}"
    keycloak-password: "${GENERATED_KC_PASS}"
# Services for: Keycloak, API, WS, UI
- apiVersion: v1
  kind: Service
  metadata:
    name: postgresql
    creationTimestamp: null
    labels:
      app: postgresql
      template: apicurio-studio
  spec:
    ports:
      - name: postgresql
        protocol: TCP
        port: 5432
        targetPort: 5432
    selector:
      name: postgresql
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: apicurio-studio-auth
      template: apicurio-studio
    name: apicurio-studio-auth
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: apicurio-studio-auth
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: apicurio-studio-api
    labels:
      app: apicurio-studio-api
      template: apicurio-studio
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: '/system/metrics'
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: apicurio-studio-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: apicurio-studio-ws
    labels:
      app: apicurio-studio-ws
      template: apicurio-studio
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: '/metrics'
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: apicurio-studio-ws
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: apicurio-studio-ui
      template: apicurio-studio
    name: apicurio-studio-ui
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: apicurio-studio-ui
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
# Postgresql Deployment Configuration
# ###################################
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: postgresql
    creationTimestamp: null
    labels:
      app: postgresql
      template: apicurio-studio
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - postgresql
          from:
            kind: ImageStreamTag
            namespace: openshift
            name: 'postgresql:9.5'
      - type: ConfigChange
    replicas: 1
    test: false
    selector:
      name: postgresql
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql
      spec:
        volumes:
          - name: postgresql-data
            persistentVolumeClaim:
              claimName: postgresql-data
        containers:
          - name: postgresql
            image: centos/postgresql-95-centos7
            ports:
              - containerPort: 5432
                protocol: TCP
            env:
              - name: POSTGRESQL_USER
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: database-user
              - name: POSTGRESQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: database-password
              - name: POSTGRESQL_DATABASE
                value: ${DB_NAME}
            resources:
              limits:
                memory: 512Mi
            volumeMounts:
              - name: postgresql-data
                mountPath: /var/lib/pgsql/data
            livenessProbe:
              tcpSocket:
                port: 5432
              initialDelaySeconds: 30
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - '-i'
                  - '-c'
                  - >-
                    psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d
                    $POSTGRESQL_DATABASE -c 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: Always
            securityContext:
              capabilities: {}
              privileged: false
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
  status: {}
# Keycloak Deployment Configuration
# #################################
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      app: apicurio-studio-auth
      template: apicurio-studio
    name: apicurio-studio-auth
  spec:
    replicas: 1
    selector:
      app: apicurio-studio-auth
      deploymentconfig: apicurio-studio-auth
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: apicurio-studio-auth
          deploymentconfig: apicurio-studio-auth
          template: apicurio-studio
      spec:
        replicas: 1
        volumes:
          - name: keycloak-data
            persistentVolumeClaim:
              claimName: keycloak-data
        containers:
        - image: auth:latest-release
          imagePullPolicy: Always
          name: apicurio-studio-auth
          volumeMounts:
          - mountPath: /opt/jboss/keycloak/standalone/data
            name: keycloak-data
            readOnly: false
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
             - name: APICURIO_KEYCLOAK_USER
               valueFrom:
                 secretKeyRef:
                   name: apicurio-studio-auth
                   key: keycloak-user
             - name: APICURIO_KEYCLOAK_PASSWORD
               valueFrom:
                 secretKeyRef:
                   name: apicurio-studio-auth
                   key: keycloak-password
             - name: APICURIO_UI_URL
               value: https://${UI_ROUTE}
          resources:
            limits:
              cpu: ${AUTH_CPU_LIMIT}
              memory: ${AUTH_MEM_LIMIT}
            requests:
              cpu: ${AUTH_CPU_REQUEST}
              memory: ${AUTH_MEM_REQUEST}
          livenessProbe:
            httpGet:
              path: /auth
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 90
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /auth
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 80
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - apicurio-studio-auth
        from:
          kind: ImageStreamTag
          name: 'auth:latest-release'
  status: {}
# Apicurio API Deployment Configuration
# #####################################
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      app: apicurio-studio-api
      template: apicurio-studio
    name: apicurio-studio-api
  spec:
    replicas: 1
    selector:
      app: apicurio-studio-api
      deploymentconfig: apicurio-studio-api
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: apicurio-studio-api
          deploymentconfig: apicurio-studio-api
          template: apicurio-studio
      spec:
        replicas: 1
        containers:
        - image: api:latest-release
          imagePullPolicy: Always
          name: apicurio-studio-api
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
             - name: APICURIO_KC_AUTH_URL
               value: https://${AUTH_ROUTE}/auth
             - name: APICURIO_KC_REALM
               value: ${KC_REALM}
             - name: APICURIO_DB_DRIVER_NAME
               value: postgresql
             - name: APICURIO_DB_CONNECTION_URL
               value: jdbc:postgresql://postgresql:5432/${DB_NAME}
             - name: APICURIO_DB_TYPE
               value: postgresql9
             - name: APICURIO_DB_USER_NAME
               valueFrom:
                 secretKeyRef:
                   name: postgresql
                   key: database-user
             - name: APICURIO_DB_PASSWORD
               valueFrom:
                 secretKeyRef:
                   name: postgresql
                   key: database-password
             - name: APICURIO_MIN_HEAP
               value: ${API_JVM_MIN}
             - name: APICURIO_MAX_HEAP
               value: ${API_JVM_MAX}
          resources:
            limits:
              cpu: ${API_CPU_LIMIT}
              memory: ${API_MEM_LIMIT}
            requests:
              cpu: ${API_CPU_REQUEST}
              memory: ${API_MEM_REQUEST}
          livenessProbe:
            httpGet:
              path: /system/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /system/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - apicurio-studio-api
        from:
          kind: ImageStreamTag
          name: 'api:latest-release'
    - type: ConfigChange
  status: {}
# Apicurio WS Deployment Configuration
# #####################################
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      app: apicurio-studio-ws
      template: apicurio-studio
    name: apicurio-studio-ws
  spec:
    replicas: 1
    selector:
      app: apicurio-studio-ws
      deploymentconfig: apicurio-studio-ws
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: apicurio-studio-ws
          deploymentconfig: apicurio-studio-ws
          template: apicurio-studio
      spec:
        replicas: 1
        containers:
        - image: ws:latest-release
          imagePullPolicy: Always
          name: apicurio-studio-ws
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
             - name: APICURIO_DB_DRIVER_NAME
               value: postgresql
             - name: APICURIO_DB_CONNECTION_URL
               value: jdbc:postgresql://postgresql:5432/${DB_NAME}
             - name: APICURIO_DB_TYPE
               value: postgresql9
             - name: APICURIO_DB_USER_NAME
               valueFrom:
                 secretKeyRef:
                   name: postgresql
                   key: database-user
             - name: APICURIO_DB_PASSWORD
               valueFrom:
                 secretKeyRef:
                   name: postgresql
                   key: database-password
             - name: APICURIO_MIN_HEAP
               value: ${WS_JVM_MIN}
             - name: APICURIO_MAX_HEAP
               value: ${WS_JVM_MAX}
          resources:
            limits:
              cpu: ${WS_CPU_LIMIT}
              memory: ${WS_MEM_LIMIT}
            requests:
              cpu: ${WS_CPU_REQUEST}
              memory: ${WS_MEM_REQUEST}
          livenessProbe:
            httpGet:
              path: /metrics
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - apicurio-studio-ws
        from:
          kind: ImageStreamTag
          name: 'ws:latest-release'
    - type: ConfigChange
  status: {}
# Apicurio UI Deployment Configuration
# ####################################
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      app: apicurio-studio-ui
      template: apicurio-studio
    name: apicurio-studio-ui
  spec:
    replicas: 1
    selector:
      app: apicurio-studio-ui
      deploymentconfig: apicurio-studio-ui
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: apicurio-studio-ui
          deploymentconfig: apicurio-studio-ui
          template: apicurio-studio
      spec:
        replicas: 1
        containers:
        - image: ui:latest-release
          imagePullPolicy: Always
          name: apicurio-studio-ui
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
             - name: APICURIO_KC_AUTH_URL
               value: https://${AUTH_ROUTE}/auth
             - name: APICURIO_KC_REALM
               value: ${KC_REALM}
             - name: APICURIO_UI_HUB_API_URL
               value: https://${API_ROUTE}
             - name: APICURIO_UI_EDITING_URL
               value: wss://${WS_ROUTE}
             - name: APICURIO_UI_LOGOUT_REDIRECT_URI
               value: /
             - name: APICURIO_MIN_HEAP
               value: ${UI_JVM_MIN}
             - name: APICURIO_MAX_HEAP
               value: ${UI_JVM_MAX}
          resources:
            limits:
              cpu: ${UI_CPU_LIMIT}
              memory: ${UI_MEM_LIMIT}
            requests:
              cpu: ${UI_CPU_REQUEST}
              memory: ${UI_MEM_REQUEST}
          livenessProbe:
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - apicurio-studio-ui
        from:
          kind: ImageStreamTag
          name: 'ui:latest-release'
    - type: ConfigChange
  status: {}
# The Routes: auth, api, ws, ui (no route needed for postgresql)
- apiVersion: v1
  kind: Route
  metadata:
    name: apicurio-studio-auth
    creationTimestamp: null
    labels:
      app: apicurio-studio-auth
      template: apicurio-studio
  spec:
    host: ${AUTH_ROUTE}
    to:
      kind: Service
      name: apicurio-studio-auth
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    name: apicurio-studio-api
    creationTimestamp: null
    labels:
      app: apicurio-studio-api
      template: apicurio-studio
  spec:
    host: ${API_ROUTE}
    to:
      kind: Service
      name: apicurio-studio-api
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    name: apicurio-studio-ws
    creationTimestamp: null
    labels:
      app: apicurio-studio-ws
      template: apicurio-studio
  spec:
    host: ${WS_ROUTE}
    to:
      kind: Service
      name: apicurio-studio-ws
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    name: apicurio-studio-ui
    creationTimestamp: null
    labels:
      app: apicurio-studio-ui
      template: apicurio-studio
  spec:
    host: ${UI_ROUTE}
    to:
      kind: Service
      name: apicurio-studio-ui
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    wildcardPolicy: None
# Template Parameters
parameters:
- name: UI_ROUTE
  displayName: User Interface Route Name
  description: The route name to use for the UI.
  value: apicurio-studio.example.com
  required: true
- name: API_ROUTE
  displayName: API Route Name
  description: The route name to use for the API.
  value: apicurio-studio-api.example.com
  required: true
- name: WS_ROUTE
  displayName: Editing Route Name
  description: The route name to use for editing layer (websocket based).
  value: apicurio-studio-ws.example.com
  required: true
- name: AUTH_ROUTE
  displayName: Authentication Route Name
  description: The route name to use for Keycloak Authentication.
  value: apicurio-studio-auth.example.com
  required: true
- name: GENERATED_DB_USER
  displayName: PostgreSQL Connection Username
  description: Username for PostgreSQL user that will be used for accessing the database.
  generate: expression
  from: user[A-Z0-9]{3}
  required: true
- name: GENERATED_DB_PASS
  displayName: PostgreSQL Connection Password
  description: Password for the PostgreSQL connection user.
  generate: expression
  from: "[a-zA-Z0-9]{16}"
  required: true
- name: DB_NAME
  displayName: Database Name
  description: The name of the Postgresql database.
  value: apicuriodb
  required: true
- name: KC_REALM
  displayName: Keycloak Realm
  description: The name of the Keycloak realm to use for authentication.
  value: apicurio
  required: true
- name: GENERATED_KC_USER
  displayName: Keycloak Admin Username
  description: Username for the Keycloak admin user.
  generate: expression
  from: admin[A-Z0-9]{3}
  required: true
- name: GENERATED_KC_PASS
  displayName: Keycloak Admin Password
  description: Password for the Keycloak admin user.
  generate: expression
  from: "[a-zA-Z0-9]{16}"
  required: true
- name: UI_JVM_MIN
  displayName: UI Min JVM Memory Limit
  description: UI Min JVM Memory Limit
  value: 512m
  required: false
- name: UI_JVM_MAX
  displayName: UI Max JVM Memory Limit
  description: UI Max JVM Memory Limit
  value: 1200m
  required: false
- name: UI_MEM_LIMIT
  displayName: UI Max Memory Limit
  description: UI Pods Max Memory Limit
  value: 1500Mi
  required: true
- name: UI_MEM_REQUEST
  displayName: UI Memory Request
  description: UI Pods Memory Request
  value: 700Mi
  required: true
- name: UI_CPU_LIMIT
  displayName: UI Max CPU Limit
  description: UI Pods Max CPU Limit
  value: '1'
  required: true
- name: UI_CPU_REQUEST
  displayName: UI CPU Request
  description: UI Pods CPU Request
  value: 100m
  required: true
- name: API_JVM_MIN
  displayName: API Min JVM Memory Limit
  description: API Min JVM Memory Limit
  value: 512m
  required: false
- name: API_JVM_MAX
  displayName: API Max JVM Memory Limit
  description: API Max JVM Memory Limit
  value: 1400m
  required: false
- name: API_MEM_LIMIT
  displayName: API Max Memory Limit
  description: API Pods Max Memory Limit
  value: 1700Mi
  required: true
- name: API_MEM_REQUEST
  displayName: API Memory Request
  description: API Pods Memory Request
  value: 800Mi
  required: true
- name: API_CPU_LIMIT
  displayName: API Max CPU Limit
  description: API Pods Max CPU Limit
  value: '1'
  required: true
- name: API_CPU_REQUEST
  displayName: API CPU Request
  description: API Pods CPU Request
  value: 100m
  required: true
- name: WS_JVM_MIN
  displayName: WS Min JVM Memory Limit
  description: WS Min JVM Memory Limit
  value: 512m
  required: false
- name: WS_JVM_MAX
  displayName: WS Max JVM Memory Limit
  description: WS Max JVM Memory Limit
  value: 1400m
  required: false
- name: WS_MEM_LIMIT
  displayName: WS Max Memory Limit
  description: WS Pods Max Memory Limit
  value: 1800Mi
  required: true
- name: WS_MEM_REQUEST
  displayName: WS Memory Request
  description: WS Pods Memory Request
  value: 900Mi
  required: true
- name: WS_CPU_LIMIT
  displayName: WS Max CPU Limit
  description: WS Pods Max CPU Limit
  value: '1'
  required: true
- name: WS_CPU_REQUEST
  displayName: WS CPU Request
  description: WS Pods CPU Request
  value: 100m
  required: true
- name: AUTH_MEM_LIMIT
  displayName: AUTH Max Memory Limit
  description: AUTH Pods Max Memory Limit
  value: 1300Mi
  required: true
- name: AUTH_MEM_REQUEST
  displayName: AUTH Memory Request
  description: AUTH Pods Memory Request
  value: 600Mi
  required: true
- name: AUTH_CPU_LIMIT
  displayName: AUTH Max CPU Limit
  description: AUTH Pods Max CPU Limit
  value: '1'
  required: true
- name: AUTH_CPU_REQUEST
  displayName: AUTH CPU Request
  description: AUTH Pods CPU Request
  value: 100m
  required: true

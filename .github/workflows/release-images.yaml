name: Release Images
on:
  workflow_dispatch: {}
  release:
    types: [released, prereleased]

env:
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  release-images:
    if: github.repository_owner == 'Apicurio'
    runs-on: ubuntu-latest
    steps:
        # Open-Source Machine emulator that allows you to emulate multiple CPU architectures on your machine
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

        # Docker CLI plugin for extended build capabilities with BuildKit
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Fetch required Details
        run: |
          touch latestRelease.json && curl https://api.github.com/repos/${GITHUB_REPOSITORY}/releases | jq '.[0]' > latestRelease.json
          echo "RELEASE_VERSION=$(cat latestRelease.json | jq -r '.tag_name')" >> $GITHUB_ENV
          echo "SOURCE_CODE_URL=$(cat latestRelease.json | jq -r '.zipball_url')" >> $GITHUB_ENV
          echo "BRANCH=$(cat latestRelease.json | jq -r '.target_commitish')" >> $GITHUB_ENV

      - name: Download Source Code
        run: wget -c $SOURCE_CODE_URL && unzip $RELEASE_VERSION && ls -lrt && mv ${{github.repository_owner}}* studio

      # We have faced issues in the past where a github release was created from a wrong commit
      # This step will ensure that the release was created from the right commit
      - name: Verify Project Version
        run: |
          cd studio
          PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          if [[ $PROJECT_VERSION != $RELEASE_VERSION ]]
          then
              echo "ERROR: Project Version '${PROJECT_VERSION}' does not match with Released Version '${RELEASE_VERSION}'"
              exit 1
          fi

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # With the update to quarkus this will build the default images with postgres as the fixed database
      - name: Build Project
        run: cd studio && mvn clean install -Pprod

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Login to Quay.io Registry
        run: docker login -u "${{ secrets.QUAY_USERNAME }}" -p "${{ secrets.QUAY_PASSWORD }}" quay.io

      - name: Build and Publish Studio API
        uses: docker/build-push-action@v2
        with:
         context: ./studio/platforms/quarkus/api
         file: ./studio/platforms/quarkus/api/Dockerfile
         platforms: ${{env.PLATFORMS}}
         push: true
         tags: |
           docker.io/apicurio/apicurio-studio-api:0.2.x
           docker.io/apicurio/apicurio-studio-api:${{env.RELEASE_VERSION}}
           quay.io/apicurio/apicurio-studio-api:0.2.x
           quay.io/apicurio/apicurio-studio-api:${{env.RELEASE_VERSION}}

      - name: Build and Publish Studio WS
        uses: docker/build-push-action@v2
        with:
         context: ./studio/platforms/quarkus/ws
         file: ./studio/platforms/quarkus/ws/Dockerfile
         platforms: ${{env.PLATFORMS}}
         push: true
         tags: |
           docker.io/apicurio/apicurio-studio-ws:0.2.x
           docker.io/apicurio/apicurio-studio-ws:${{env.RELEASE_VERSION}}
           quay.io/apicurio/apicurio-studio-ws:0.2.x
           quay.io/apicurio/apicurio-studio-ws:${{env.RELEASE_VERSION}}

      - name: Build and Publish Studio UI
        uses: docker/build-push-action@v2
        with:
         context: ./studio/platforms/quarkus/ui
         file: ./studio/platforms/quarkus/ui/Dockerfile
         platforms: ${{env.PLATFORMS}}
         push: true
         tags: |
           docker.io/apicurio/apicurio-studio-ui:0.2.x
           docker.io/apicurio/apicurio-studio-ui:${{env.RELEASE_VERSION}}
           quay.io/apicurio/apicurio-studio-ui:0.2.x
           quay.io/apicurio/apicurio-studio-ui:${{env.RELEASE_VERSION}}

      # Once the regular images are published, build and publish the MySQL ones.
      - name: Build Project with MySQL
        run: cd studio/platforms/quarkus && mvn clean install -Pmysql

      - name: Build and Publish Studio API
        uses: docker/build-push-action@v2
        with:
          context: ./studio/platforms/quarkus/api
          file: ./studio/platforms/quarkus/api/Dockerfile
          platforms: ${{env.PLATFORMS}}
          push: true
          tags: |
            docker.io/apicurio/apicurio-studio-api-mysql:0.2.x
            docker.io/apicurio/apicurio-studio-api-mysql:${{env.RELEASE_VERSION}}
            quay.io/apicurio/apicurio-studio-api-mysql:0.2.x
            quay.io/apicurio/apicurio-studio-api-mysql:${{env.RELEASE_VERSION}}

      - name: Build and Publish Studio WS
        uses: docker/build-push-action@v2
        with:
          context: ./studio/platforms/quarkus/ws
          file: ./studio/platforms/quarkus/ws/Dockerfile
          platforms: ${{env.PLATFORMS}}
          push: true
          tags: |
            docker.io/apicurio/apicurio-studio-ws-mysql:0.2.x
            docker.io/apicurio/apicurio-studio-ws-mysql:${{env.RELEASE_VERSION}}
            quay.io/apicurio/apicurio-studio-ws-mysql:0.2.x
            quay.io/apicurio/apicurio-studio-ws-mysql:${{env.RELEASE_VERSION}}

      - name: Google Chat Notification
        if: ${{ failure() }}
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: ${{ github.job }}
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: ${{ job.status }}
